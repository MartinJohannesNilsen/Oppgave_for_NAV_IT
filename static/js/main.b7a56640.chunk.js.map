{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","G","thisYear","Date","getFullYear","useState","inputSalaryState","setInputSalaryState","Basis","Amount","unemploymentBenefits","setUnemploymentBenefits","React","useEffect","window","addEventListener","event","key","handleClickOnCalculateButton","handleChange","year","isNaN","target","value","Object","keys","length","document","getElementById","classList","remove","showCalculatedResult","add","calculateUnemploymentBenefits","salaryLastThreeYears","parseInt","salaryLastYear","meetsRequirementsForUnemploymentBenefits","unemploymentBenefitsBasis","Math","max","unemploymentBenefitsAmount","ceil","Box","className","Card","FormControl","fullWidth","variant","OutlinedInput","onChange","endAdornment","InputAdornment","position","aria-label","type","inputProps","onClick","id","Fab","aria-labelledby","alt","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b7a56640.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useState } from \"react\";\nimport \"./App.scss\";\nimport {\n\tCard,\n\tBox,\n\tFormControl,\n\tOutlinedInput,\n\tInputAdornment,\n\tFab,\n\tAccordion,\n\tAccordionSummary,\n\tAccordionDetails,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nfunction App() {\n\t//This is the last updated G-value as of 01.05.2020\n\tconst G = 101351;\n\t//Need the current year for asking about the last 3 years\n\tconst thisYear = new Date().getFullYear();\n\t//States\n\tconst [inputSalaryState, setInputSalaryState] = useState({});\n\tconst [unemploymentBenefits, setUnemploymentBenefits] = useState({\n\t\tBasis: 0,\n\t\tAmount: 0,\n\t});\n\n\tReact.useEffect(() => {\n\t\twindow.addEventListener(\"keydown\", (event) => {\n\t\t\tif (event.key === \"Enter\") {\n\t\t\t\thandleClickOnCalculateButton();\n\t\t\t}\n\t\t});\n\t}, [inputSalaryState]);\n\n\t//This method inserts a value with the corresponding year to the dictionary. It needs to be a number, if not we insert \"\" and checks for this later\n\tconst handleChange = (year) => (event) => {\n\t\tsetInputSalaryState({\n\t\t\t...inputSalaryState,\n\t\t\t[year]: !isNaN(event.target.value) ? event.target.value : \"\",\n\t\t});\n\t};\n\n\t//This method is fired when the calulatebutton is pressed\n\tconst handleClickOnCalculateButton = () => {\n\t\t//If all values are filled in correctly, calulcate, else show warning\n\t\tif (\n\t\t\tObject.keys(inputSalaryState).length === 3 &&\n\t\t\tinputSalaryState[thisYear - 1] !== \"\" &&\n\t\t\tinputSalaryState[thisYear - 2] !== \"\" &&\n\t\t\tinputSalaryState[thisYear - 3] !== \"\"\n\t\t) {\n\t\t\tdocument.getElementById(\"missingInputWarning\").classList.remove(\"Show\");\n\t\t\tshowCalculatedResult();\n\t\t} else {\n\t\t\tdocument.getElementById(\"missingInputWarning\").classList.add(\"Show\");\n\t\t\tdocument.getElementById(\"ResultContainer\").classList.add(\"Hidden\");\n\t\t}\n\t};\n\n\t//This method handles the showing of the calculated result\n\tconst showCalculatedResult = () => {\n\t\tcalculateUnemploymentBenefits();\n\t\tdocument.getElementById(\"ResultContainer\").classList.remove(\"Hidden\");\n\t};\n\n\t//Calculates the result\n\tconst calculateUnemploymentBenefits = () => {\n\t\tlet salaryLastThreeYears =\n\t\t\tparseInt(inputSalaryState[thisYear - 1]) +\n\t\t\tparseInt(inputSalaryState[thisYear - 2]) +\n\t\t\tparseInt(inputSalaryState[thisYear - 3]);\n\t\tlet salaryLastYear = parseInt(inputSalaryState[thisYear - 1]);\n\n\t\t//Check if the user meets the requirements. I was a little uncertain if I should have used >= or >, but used > because of the word \"over\" given as criteria\n\t\tlet meetsRequirementsForUnemploymentBenefits =\n\t\t\tsalaryLastThreeYears > 3 * G || salaryLastYear > 1.5 * G ? true : false;\n\t\tif (!meetsRequirementsForUnemploymentBenefits) {\n\t\t\tsetUnemploymentBenefits({\n\t\t\t\tBasis: parseInt(Math.max(salaryLastThreeYears / 3, salaryLastYear)),\n\t\t\t\tAmount: 0,\n\t\t\t});\n\t\t} else {\n\t\t\t//Checks which sum to use, based on the highest sum of either the average of the last three years or the last years salary. Can't be over 6G, if so we use 6G as basis\n\t\t\tlet unemploymentBenefitsBasis =\n\t\t\t\tMath.max(salaryLastThreeYears / 3, salaryLastYear) <= 6 * G\n\t\t\t\t\t? parseInt(Math.max(salaryLastThreeYears / 3, salaryLastYear))\n\t\t\t\t\t: 6 * G;\n\t\t\tlet unemploymentBenefitsAmount = meetsRequirementsForUnemploymentBenefits\n\t\t\t\t? Math.ceil(unemploymentBenefitsBasis / 260)\n\t\t\t\t: 0;\n\t\t\tsetUnemploymentBenefits({\n\t\t\t\tBasis: unemploymentBenefitsBasis,\n\t\t\t\tAmount: unemploymentBenefitsAmount,\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<Box className=\"App\">\n\t\t\t<Card className=\"Container\">\n\t\t\t\t<Box className=\"IntroContainer\">\n\t\t\t\t\t<h1>Velkommen</h1>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\tLa oss sjekke om du har rett på dagpenger. Start med å fylle ut\n\t\t\t\t\t\tskjemaet under:\n\t\t\t\t\t</h2>\n\t\t\t\t</Box>\n\n\t\t\t\t<Box className=\"InputContainer\">\n\t\t\t\t\t<h3>Din årsinntekt i {thisYear - 1}:</h3>\n\t\t\t\t\t<FormControl fullWidth variant=\"outlined\">\n\t\t\t\t\t\t<OutlinedInput\n\t\t\t\t\t\t\tvalue={inputSalaryState[thisYear - 1] || null}\n\t\t\t\t\t\t\tonChange={handleChange(thisYear - 1)}\n\t\t\t\t\t\t\tendAdornment={<InputAdornment position=\"end\">NOK</InputAdornment>}\n\t\t\t\t\t\t\taria-label=\"annual salary 1 year ago\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tinputProps={{ \"data-testid\": \"inputField1YearAgo\" }}\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\tdocument\n\t\t\t\t\t\t\t\t\t.getElementById(\"ResultContainer\")\n\t\t\t\t\t\t\t\t\t.classList.add(\"Hidden\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormControl>\n\t\t\t\t\t<h3>Din årsinntekt i {thisYear - 2}:</h3>\n\t\t\t\t\t<FormControl fullWidth variant=\"outlined\">\n\t\t\t\t\t\t<OutlinedInput\n\t\t\t\t\t\t\tvalue={inputSalaryState[thisYear - 2] || null}\n\t\t\t\t\t\t\tonChange={handleChange(thisYear - 2)}\n\t\t\t\t\t\t\tendAdornment={<InputAdornment position=\"end\">NOK</InputAdornment>}\n\t\t\t\t\t\t\taria-label=\"annual salary 2 years ago \"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tinputProps={{ \"data-testid\": \"inputField2YearsAgo\" }}\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\tdocument\n\t\t\t\t\t\t\t\t\t.getElementById(\"ResultContainer\")\n\t\t\t\t\t\t\t\t\t.classList.add(\"Hidden\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormControl>\n\t\t\t\t\t<h3>Din årsinntekt i {thisYear - 3}:</h3>\n\t\t\t\t\t<FormControl fullWidth variant=\"outlined\">\n\t\t\t\t\t\t<OutlinedInput\n\t\t\t\t\t\t\tvalue={inputSalaryState[thisYear - 3] || null}\n\t\t\t\t\t\t\tonChange={handleChange(thisYear - 3)}\n\t\t\t\t\t\t\tendAdornment={<InputAdornment position=\"end\">NOK</InputAdornment>}\n\t\t\t\t\t\t\taria-label=\"annual salary 3 years ago\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tinputProps={{ \"data-testid\": \"inputField3YearsAgo\" }}\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\tdocument\n\t\t\t\t\t\t\t\t\t.getElementById(\"ResultContainer\")\n\t\t\t\t\t\t\t\t\t.classList.add(\"Hidden\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</Box>\n\n\t\t\t\t<p className=\"ErrorMessage\" id=\"missingInputWarning\">\n\t\t\t\t\tDu må fylle inn alle feltene!\n\t\t\t\t</p>\n\n\t\t\t\t<Box className=\"CalculateButtonContainer\">\n\t\t\t\t\t<Fab\n\t\t\t\t\t\tonClick={handleClickOnCalculateButton}\n\t\t\t\t\t\taria-labelledby=\"Calculate\"\n\t\t\t\t\t\tvariant=\"extended\"\n\t\t\t\t\t\talt=\"Calculatebutton\"\n\t\t\t\t\t\tid=\"calculateButton\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<h2>Beregn dagpenger</h2>\n\t\t\t\t\t</Fab>\n\t\t\t\t</Box>\n\t\t\t</Card>\n\n\t\t\t<Card className=\"Container Hidden\" id=\"ResultContainer\">\n\t\t\t\t<h1>Du får innvilget {unemploymentBenefits[\"Amount\"]}kr</h1>\n\t\t\t\t<p>\n\t\t\t\t\t{unemploymentBenefits[\"Amount\"] === 0\n\t\t\t\t\t\t? \"Du oppfyller ikke kravene på dagpenger. Ditt dagpengegrunnlag baseres på \"\n\t\t\t\t\t\t: \"Du oppfyller kravene på dagpenger. Ditt dagpengegrunnlag baseres på \"}\n\t\t\t\t\t{unemploymentBenefits[\"Basis\"] === 6 * G\n\t\t\t\t\t\t? \"6G ettersom du har tjent mer enn dette.\"\n\t\t\t\t\t\t: unemploymentBenefits[\"Basis\"] ===\n\t\t\t\t\t\t  parseInt(inputSalaryState[thisYear - 1])\n\t\t\t\t\t\t? \"din inntekt for det siste året, som er \"\n\t\t\t\t\t\t: \"din gjennomsnittsinntekt for de tre siste årene, som er \"}\n\t\t\t\t\t{unemploymentBenefits[\"Basis\"] !== 6 * G\n\t\t\t\t\t\t? unemploymentBenefits[\"Basis\"] + \"kr.\"\n\t\t\t\t\t\t: \"\"}\n\t\t\t\t</p>\n\t\t\t\t<Accordion className=\"Accordion\">\n\t\t\t\t\t<AccordionSummary\n\t\t\t\t\t\texpandIcon={<ExpandMoreIcon />}\n\t\t\t\t\t\taria-controls=\"Information about calculation\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<p>Hvordan foregår denne utregningen?</p>\n\t\t\t\t\t</AccordionSummary>\n\t\t\t\t\t<AccordionDetails className=\"AccordionContainer\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<b>Krav for dagpenger</b>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tFor å få innvilget dagpenger må man enten ha tjent til sammen\n\t\t\t\t\t\t\t\tover 3G de siste 3 kalenderårene, eller ha tjent over 1.5G\n\t\t\t\t\t\t\t\tforrige kalenderår ({thisYear - 1}). Grunnbeløpet, kalt G,\n\t\t\t\t\t\t\t\tbrukes til å beregne mange av NAVs ytelser. Grunnbeløpet\n\t\t\t\t\t\t\t\tjusteres 1. mai hvert år og blir fastsatt etter trygdeoppgjøret.\n\t\t\t\t\t\t\t\tGrunnbeløpet (G) per 1. mai 2020 er kr 101 351.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<b>Dagpengegrunnlag</b>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tDagpengegrunnlaget er den høyeste verdien av enten inntekten\n\t\t\t\t\t\t\t\tsiste kalenderåret, eller gjennomsnittsinntekten de siste tre\n\t\t\t\t\t\t\t\tkalenderårene. Dagpengegrunnlaget kan ikke være høyere enn 6G.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<b>Dagsats</b>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tFor å finne dagsatsen deler man dagpengegrunnlaget på antall\n\t\t\t\t\t\t\t\tarbeidsdager i året, rundet opp. I NAV har vi definert antall\n\t\t\t\t\t\t\t\tarbeidsdager i et år til å være 260.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</AccordionDetails>\n\t\t\t\t</Accordion>\n\t\t\t</Card>\n\t\t</Box>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}